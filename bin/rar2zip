#!/bin/bash

# this file is based on a script I found on someone's blog
# https://shkspr.mobi/blog/2016/12/converting-rar-to-zip-in-linux/
echo "Converting RAR to ZIP"

set -ex

IFS="␜"

OLDFILE=$(realpath "$1")

# Use RAM disk for temporary files.
WORKDIR="/dev/shm/"

# Set name for the temp dir. This directory will be created under WORKDIR
TEMPDIR=$(uuidgen -r)

SOURCEDIR=$(dirname "$OLDFILE")

echo "Using $SOURCEDIR"

# Create an temporary directory to work in.
cd $WORKDIR
mkdir $TEMPDIR
TEMPDIR=$(realpath $TEMPDIR)
cd $TEMPDIR

function findDepth1 {
    find . -mindepth 1 -maxdepth 1 "$@"
}

# Find all the .rar files in the specified directory.
# Using -iname means it will find .rar .RAR .RaR etc.
# "-printf "%p␜" will cause the file names to be separated by the ␜ symbol,
# rather than the default newline.

# Get the file name without the extension
BASENAME=`basename "${OLDFILE%.*}"`

# Path for the file. The ".zip" file will be moved there.
DIRNAME=`dirname $OLDFILE`

# Name of the .zip file
NEWNAME="$BASENAME.zip"

# Create a temporary folder for unRARed files
echo "Extracting $OLDFILE"
mkdir "$BASENAME"
7z x "$OLDFILE" -O"$BASENAME"
cd "$BASENAME"

if [[ "$2" == "--subdir" ]] ; then
    # assert only one subdirectory
    COUNTFILES=$(findDepth1 -print0 | tr -dc '\0'| wc -c)
    COUNTDIRS=$(findDepth1 -type d -print0 | tr -dc '\0'| wc -c)
    if [[ "$COUNTFILES" != 1 || "$COUNTDIRS" != 1 ]] ; then
       echo >&2 "not exactly 1 subdirectory found, exiting"
       exit 1
    fi
    SUBDIR=$(findDepth1 -type d)

    cd "$SUBDIR"
fi

# Zip the files with maximum compression
7z a -tzip -mx=9 "$NEWNAME" *
# Alternative. MUCH SLOWER, but better compression
# 7z a -mm=Deflate -mfb=258 -mpass=15 -r "$NEWNAME" *

# Move the new .zip to the directory containing the original ".rar" file
mv "$NEWNAME" "${DIRNAME}/${NEWNAME}"

# Delete the temporary directory
cd $WORKDIR
rm -r $TEMPDIR

echo "Conversion Done"
